
set.seed(13435)
  x <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15))
  x <- x[sample(1:5),]
  x$var2[c(1,2)] <- NA
 
  x[,1]
  x[,"var3"]
  x[1:2,"var1"]
 
  x[x$var1 <= 3 & x$var3 > 11,]
  
  x[x$var1 <= 3 | x$var3 > 11,]
  
  x[which(x$var3>11),]
  
  sort(x$var1)
  
  sort(x$var1,decreasing = T)
  
  sort(x$var2,na.last = T)
  
  x[order(x$var1,x$var2),]
  
  library(plyr)
  arrange(x,var1)
  arrange(x,desc(var3))
  
  x$var4 <- rnorm(5)
  t <- cbind(x,rnorm(5))
  
  setwd("C:/Stendhal/13.coursera/getting and cleaning data/week3")
  if(!file.exists("./data")){dir.create("./data")}
  
  fileUrl <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
  download.file(fileUrl,destfile = "./data/restaurants.csv")
  restData <- read.csv("./data/restaurants.csv")
  
  head(restData, n =3)
  tail(restData, n=2)
  summary(restData)
  
  str(restData)
  quantile(restData$councilDistrict,na.rm = T)
  quantile(restData$councilDistrict,probs = c(0.5,0.75,0.9))
  
  table(restData$zipCode, useNA = "ifany")
  table(restData$councilDistrict,restData$zipCode)
  
  sum(is.na(restData$councilDistrict))
  
  any(is.na(restData$councilDistrict))
  
  all(restData$zipCode > 0)
  
  colSums(is.na(restData))
  
  all(colSums(is.na(restData))==0)
  
  table(restData$zipCode %in% c("21212"))
  
  table(restData$zipCode %in% c("21212","21213"))
  
  restData[restData$zipCode %in% c("21212","21213"),]
  
  data(UCBAdmissions)
  DF = as.data.frame(UCBAdmissions)
  summary(DF)
  
  xt <- xtabs(Freq ~ Gender + Admit,data = DF)
  
  warpbreaks$replicate <- rep(1:9,len=54)
  
  xt <- xtabs(breaks ~.,data=warpbreaks)
  xt
  
  ftable(xt)
  
  fakeData = rnorm(1e5)
  
  object.size(fakeData)
  print(object.size(fakeData),units = "Mb")
  
  # Creating sequences ------
  
  s1 <- seq(1,10,by=2) ; s1
  s2 <- seq(1,10,length = 3) ; s2
  x <- c(1,3,8,10,15) ; s3 <- seq(along = x) ; s3
  
  restData$nearMe <- restData$neighborhood %in% c("Roland Park","Homeland")
  table(restData$nearMe)
  
  restData$zipWrong <- ifelse(restData$zipCode < 0,TRUE,FALSE)
  table(restData$zipWrong,restData$zipCode<0)
  
  restData$zipGroups = cut(restData$zipCode, breaks = quantile(restData$zipCode))
  table(restData$zipGroups)
  table(restData$zipGroups,restData$zipCode)
  
  library(Hmisc)
  restData$zipGroups = cut2(restData$zipCode,g=4)
  table(restData$zipGroups)
  
  restData$zcf <- factor(restData$zipCode)
  restData$zcf[1:10]
  class(restData$zcf)
  
  yesno <- sample(c("yes","no"),size = 10,replace = TRUE)
  
  yesnofac <- factor(yesno,levels = c("yes","no"))
  
  relevel(yesnofac,ref = "yes")
  
  as.numeric(yesnofac)
  
  
  restData2 = mutate(restData,zipGroups = cut2(zipCode,g=4))
  table(restData2$zipGroups)

# Reshaping data --------------

library(reshape2)
data(mtcars)
head(mtcars)
mtcars$carname <- rownames(mtcars)
carMelt <- melt(
    data = mtcars,
    id = c("carname","gear","cyl"),
    measure.vars = c("mpg","hp")
)
head(carMelt)

tail(carMelt)

cylData <- dcast(
    data = carMelt,
    cyl ~ variable
)

cylData <- dcast(
    data = carMelt,
    cyl ~ variable,
    mean
)
cylData

head(InsectSprays)
tapply(InsectSprays$count,InsectSprays$spray,sum)

spIns = split(InsectSprays$count,InsectSprays$spray)
sprC = lapply(spIns, sum)
sprC = unlist(sprC)

sapply(spIns, sum)

library(plyr)
ddply(InsectSprays,.(spray),summarise,sum=sum(count))

spraySums <- ddply(InsectSprays,.(spray),summarize,sum=ave(count,FUN=sum))



# Using dply
i <- match("city",names(chicago))
j <- match("dtpt",names(chicago))

head(chicago[,-(i:j)])

chicago <- mutate(chicago, tempcat = factor(1*(tmpd > 80 ), labels = c("cold","hot")))
hotcold <- group_by(chicago,tempcat)
